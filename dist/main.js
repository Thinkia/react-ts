!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=React},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(2),l=n(3);r.render(o.createElement(l.List,{task:"任务",describe:"描述"}),document.getElementById("example"))},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);class r extends o.Component{constructor(e){super(e),this.state={value:"123"},this.handleChange=this.handleChange.bind(this),this.handleSubmit=this.handleSubmit.bind(this)}componentDidMount(){console.log("DidMount: 挂载 ")}static getDerivedStateFromProps(e,t){return console.log("getDerivedStateFromProps: 从 props 中获取 state "),console.log(t.value),!0}shouldComponentUpdate(){return console.log("shouldComponentUpdate: 判断是否需要重绘"),!0}getSnapshotBeforeUpdate(){return console.log("getSnapshotBeforeUpdate : 获取快照？ "),!0}componentDidUpdate(){console.log("componentDidUpdate:  更新完成"),console.log(this.state.value)}componentWillUnmount(){console.log("WillUnmount: 即将卸载")}static getDerivedStateFromError(){console.log("getDerivedStateFromErrort: 从错误中获取 state")}componentDidCatch(){console.log("componentDidCatch: 捕获错误并进行处理")}handleChange(e){this.setState({value:e.target.value}),console.log(this.state.value)}handleSubmit(e){console.log("submit"),e.preventDefault()}render(){return o.createElement("ul",null,o.createElement("label",null,this.props.task),o.createElement("input",{value:this.state.value,onChange:this.handleChange}))}}t.List=r}]);
//# sourceMappingURL=main.js.map