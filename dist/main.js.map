{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/Item.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","List","Component","props","super","setStage","task","changeStage","objects","this","objectsClone","map","stage","setState","delObject","changeObjects","push","changeObj","state","describe","number","addElement","doneAll","allObj","length","_prevProps","_prevState","_snapshot","console","log","setAllStage","item","onClick","Item","ReactDOM","render","document","getElementById","PureComponent","handleChange","_nextProps","prevState","event","target","preventDefault"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = React;","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { Item } from './components/Item';\r\n\r\ninterface itemData {\r\n    objects: {\r\n        task: string,\r\n        describe: string,\r\n        stage: string,\r\n    }[];\r\n    number: number;\r\n}\r\n\r\n\r\nclass List extends React.Component<{}, itemData> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { objects: [{ task: 'task0', describe: 'describe0', stage: 'todo' }], number: 1 }\r\n        this.addElement = this.addElement.bind(this)\r\n        this.doneAll = this.doneAll.bind(this)\r\n    }\r\n\r\n    // 挂载完成\r\n    componentDidMount() {\r\n        // 启服务\r\n        // let url = './test.json'\r\n        // fetch(url)\r\n        // .then(res => res.json())\r\n        // .then(\r\n        //     result =>{\r\n        //         console.log(result);\r\n        //     },\r\n        //     error => {\r\n        //         console.log(error)\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    // 克隆当前 objects\r\n    objectsClone() {\r\n        const allObj = this.state.objects\r\n        let changeObj:{task: string, describe: string,stage:string}[] = [];\r\n        for (let i=0; i< allObj.length; i++){\r\n            changeObj[i] ={\r\n                task: allObj[i].task, \r\n                describe:allObj[i].describe,\r\n                stage: allObj[i].stage}\r\n        }\r\n        return changeObj;\r\n    }\r\n\r\n    // 更新完成\r\n    componentDidUpdate(_prevProps: {}, _prevState: {}, _snapshot: any) {\r\n        console.log('componentDidUpdate:  更新完成')\r\n    }\r\n\r\n    // 增加一个object\r\n    addElement() {\r\n\r\n        let objects = this.state.objects;\r\n        objects.push({ \r\n            task: 'task' + this.state.number,\r\n            describe: 'describe' + this.state.number,\r\n            stage: 'todo' })\r\n\r\n        this.setState({\r\n            objects: objects,\r\n            number: this.state.number + 1,\r\n        })\r\n    }\r\n\r\n\r\n    // 设置为done\r\n    doneAll() {\r\n       this.setAllStage('done')\r\n    }\r\n\r\n    // 设置所有 objects.stage  ：  all done , all todo , all doing ;\r\n    setAllStage(changeStage : string) {\r\n        let objects = this.objectsClone()\r\n        objects.map(p=>{\r\n            p.stage = changeStage\r\n        })\r\n        this.setState({objects:objects})\r\n    }\r\n\r\n    // 修改 某个 task 的 stage值\r\n    setStage = (task: string,  changeStage: string) => {\r\n        let objects = this.objectsClone();\r\n        objects.map(p=>{\r\n            if(p.task === task) p.stage = changeStage\r\n        })\r\n        this.setState({objects:objects})\r\n    }\r\n\r\n    // delete all objects 删除所有对象\r\n    delAllObjects() {\r\n        this.setState({objects:[]});\r\n    }\r\n\r\n    // delete task  object  删除某个 task 对象\r\n    delObject = (task: string) => {\r\n        let objects = this.objectsClone();\r\n        let changeObjects : {\r\n            task: string,\r\n            describe: string,\r\n            stage: string\r\n        }[] = []\r\n        objects.map(p=>{\r\n            if(p.task !== task)changeObjects.push(p)\r\n        })\r\n        this.setState({objects:changeObjects })\r\n    }\r\n\r\n    /**\r\n     * important  setState 方法对比的是 当前state  和参数的值;  如果将 state 赋值 则会影响更新  可以把 state  clone()一次 ;\r\n     * \r\n     */\r\n\r\n    changeObj = (changeObjects: []) => {\r\n      this.setState({ objects: changeObjects })\r\n    }\r\n\r\n\r\n    render() {\r\n        const item = this.state.objects;\r\n        const {objects} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.addElement}> add </button>\r\n                <button onClick={this.doneAll}> done all </button>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            item.map((item) => {\r\n                                return (\r\n                                    <Item\r\n                                        key={item.task}\r\n                                        object={item}\r\n                                        delObject={this.delObject}\r\n                                        setStage={this.setStage}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <List />,\r\n    document.getElementById(\"example\")\r\n);","module.exports = ReactDOM;","import * as React from 'react';\r\n\r\nexport interface ItemProps {\r\n    object: {task: string, describe: string,stage : string};\r\n    delObject:  (task: string)=>void;\r\n    setStage: (task: string, stage: string) =>void\r\n}\r\n\r\n/**\r\n * ts 中 一定要指定 state 类型     --- 浪费 1h  参考文章： https://juejin.im/post/5bed5f03e51d453c9515e69b\r\n * \r\n * webpack  react & typescript  打包  6h  \r\n * \r\n * webpack :  https://www.webpackjs.com/guides/typescript/\r\n   react & typescript : https://www.typescriptlang.org/docs/handbook/react-&-webpack.html\r\n * \r\n */\r\nexport class Item extends React.PureComponent<ItemProps, { stage: string}> {\r\n    constructor(props: Readonly<ItemProps>) {\r\n        super(props);\r\n        /**\r\n         *  创建阶段  \r\n         *  使用 this.state 来初始化 state\r\n            给事件处理函数绑定 this\r\n         *  */\r\n        this.state = { stage: this.props.object.stage};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setStage = this.setStage.bind(this);\r\n    }\r\n\r\n    // 生命周期理解测试 3h  ：  https://segmentfault.com/a/1190000020348448\r\n\r\n    //挂载 -- 大部分情况下都推荐把异步数据请求放在 componentDidMount() 中\r\n    componentDidMount() {\r\n\r\n        console.log('DidMount: 挂载 ');\r\n    }\r\n\r\n    //更新阶段  从 props 中获取 state  \r\n    static getDerivedStateFromProps(_nextProps: ItemProps, prevState: { value: string }) {\r\n        console.log('getDerivedStateFromProps: 从 props 中获取 state ')\r\n        return true\r\n    }\r\n\r\n\r\n    // todo 更新阶段 -- 判断是否需要重绘  ？ 类型\r\n    // shouldComponentUpdate(_prevProps: ListProps, _prevState: { value: string }): any {\r\n    //     console.log('shouldComponentUpdate: 判断是否需要重绘')\r\n\r\n    //     return true\r\n    // }\r\n\r\n    // todo 更新阶段 -- 获取快照？\r\n    /**\r\n     * 这个方法在 render() 之后，componentDidUpdate() 之前调用。\r\n     * 返回值称为一个快照（snapshot），如果不需要 snapshot，则必须显示的返回 null \r\n     * —— 因为返回值将作为 componentDidUpdate() 的第三个参数使用。所以这个函数必须要配合 componentDidUpdate() 一起使用。\r\n     */\r\n    getSnapshotBeforeUpdate(_prevProps: ItemProps, _prevState: {}) {\r\n        console.log('getSnapshotBeforeUpdate : 获取快照？ ')\r\n        return true\r\n    }\r\n\r\n    // 更新完成\r\n    componentDidUpdate(_prevProps: ItemProps, _prevState: {}, _snapshot: any) {\r\n        console.log('componentDidUpdate:  更新完成')\r\n    \r\n     \r\n    }\r\n\r\n    //卸载阶段 即将卸载\r\n    componentWillUnmount() {\r\n        console.log('WillUnmount: 即将卸载');\r\n    }\r\n\r\n    // 错误处理： 从错误中获取 state\r\n    static getDerivedStateFromError() {\r\n        console.log('getDerivedStateFromErrort: 从错误中获取 state');\r\n    }\r\n    // 错误处理： 捕获错误并进行处理\r\n    componentDidCatch() {\r\n        console.log('componentDidCatch: 捕获错误并进行处理')\r\n    }\r\n\r\n    //  删除  当前item  object\r\n    handleChange(event: any) {\r\n        this.props.delObject(this.props.object.task)\r\n    }\r\n\r\n\r\n    // \r\n    setStage(event: any) {\r\n        this.props.setStage(this.props.object.task,event.target.value)    \r\n        // this.props.object.stage = event.target.value\r\n        // this.setState({stage: event.target.value}) \r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    /**\r\n     *  可返回类型\r\n     *  React 元素（React elements）\r\n        数组（Arrays）\r\n        片段（fragments）\r\n        插槽（Portals）\r\n        字符串或数字（String and numbers）\r\n        布尔值或 null（Booleans or null）\r\n     * \r\n     */\r\n    render() {\r\n\r\n            return (\r\n                <tr>\r\n                    <td>{this.props.object.task}</td>\r\n                    <td>{this.props.object.describe}</td>\r\n                    <td>{this.props.object.stage}</td>\r\n                    <td>\r\n                        <button onClick={this.setStage} value=\"done\" >done</button>\r\n                        <button onClick={this.setStage} value=\"doing\" >doing</button>\r\n                        <button onClick={this.setStage} value=\"todo\" >todo</button>\r\n                        <button onClick={this.handleChange} >delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n     \r\n    }\r\n}"],"sourceRoot":""}